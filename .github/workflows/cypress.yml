name: Cypress tests

on: [push]

jobs:
  tests:
    name: Cypress tests
    env:
      ENV: test
      PGHOST: localhost
      PGUSER: postgres
      PGPORT: 5432
      DATABASE_URL: postgresql://postgres@127.0.0.1/basetool
      SECRET: 00eadabb495b62341e34645f9c8547254d2216472f7713d5c0a532431d2a7447

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.5
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: test-yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: test-yarn-cache
        with:
          path: ${{ steps.test-yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-test-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-test-yarn-

      - name: Install deps
        run: yarn install

      - name: Build project
        run: yarn build

      # - name: Create DB
      #   run: yarn prisma migrate dev

      # - name: Create DB

      - name: Start server and run tests
        run: DOTENV=$(yarn bin dotenv); npx concurrently "yarn cypress run" "$DOTENV -e .env.test -- yarn next start -p 4099" -s -k

      # - name: Set up Ruby
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     # bundler-cache: true
      #     bundler: default
      #     ruby-version: ${{ matrix.ruby }}

      # - name: Install PostgreSQL 11 client
      #   run: |
      #     sudo apt-get -yqq install libpq-dev

      # - uses: actions/cache@v1
      #   with:
      #     path: vendor/bundle
      #     key: ${{ runner.os }}-test-gems-${{ hashFiles('**/Gemfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-test-gems-

      # - name: Bundle install
      #   run: |
      #     bundle config path vendor/bundle
      #     bundle install --jobs 4 --retry 3
      #     bin/rails db:create
      #     bin/rails db:migrate

      # - name: Get yarn cache directory path
      #   id: test-yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - uses: actions/cache@v1
      #   id: test-yarn-cache
      #   with:
      #     path: ${{ steps.test-yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-test-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-test-yarn-

      # - name: Yarn install
      #   run: yarn

      # - name: Replace packed webpacker config
      #   run: |
      #     rm ./config/webpacker.yml
      #     mv ./config/webpacker_packed.yml ./config/webpacker.yml

      # - name: Bundle assets
      #   run: bin/webpack
      #   env:
      #     RAILS_ENV: production
      #     NODE_ENV: production

      # - name: Run tests
      #   run: bundle exec rspec

      # - name: Generate coverage
      #   uses: codecov/codecov-action@v1
      #   if: ${{ matrix.rails == '6.1' && matrix.ruby == '2.7' }}
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     file: ./coverage/coverage.xml
      #     name: codecov-umbrella
